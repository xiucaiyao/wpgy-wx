<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="weixin">
    
    <resultMap id="weixinFansMap" type="com.mobile.po.wx.WeixinFansBean" >
		<id column="WEIXIN_FANS_ID" property="weixinFansId" jdbcType="VARCHAR" />
		<result column="CUSTOMER_ID" property="customerId" jdbcType="VARCHAR" />
		<result column="CUSTOMER_TYPE" property="customerType" jdbcType="VARCHAR" />
		<result column="OPEN_ID" property="openId" jdbcType="VARCHAR" />
		<result column="UNION_ID" property="unionId" jdbcType="VARCHAR" />
		<result column="LAST_SUBSCRIBE_TIME" property="lastSubscribeTime" jdbcType="TIMESTAMP" />
		<result column="LAST_UNSUBSCRIBE_TIME" property="lastUnsubscribeTime" jdbcType="TIMESTAMP" />
		<result column="IS_SUBSCRIBE" property="isSubscribe" jdbcType="BOOLEAN" />
		<result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
		<result column="GENDER" property="gender" jdbcType="VARCHAR" />
		<result column="HEADERIMAGE" property="headerimage" jdbcType="VARCHAR" />
		<result column="COUNTRY" property="country" jdbcType="VARCHAR" />
		<result column="PROVINCE" property="province" jdbcType="VARCHAR" />
		<result column="CITY" property="city" jdbcType="VARCHAR" />
		<result column="GROUP_ID" property="groupId" jdbcType="VARCHAR" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="productMap" type="com.yu.po.ProductBean" >
		<id column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
		<result column="SERIAL" property="serial" jdbcType="VARCHAR" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="ALIAS_NAME" property="aliasName" jdbcType="VARCHAR" />
		<result column="PRODUCT_TYPE" property="productType" jdbcType="VARCHAR" />
		<result column="BRAND" property="brand" jdbcType="VARCHAR" />
		<result column="CUSTOMER_ID" property="customerId" jdbcType="VARCHAR" />
		<result column="PRICE" property="price" jdbcType="DECIMAL" />
<!-- 		<result column="COMMON_PRICE" property="commonPrice" jdbcType="DECIMAL" /> -->
		<result column="PRODUCT_SALE_TYPE" property="productSaleType" jdbcType="VARCHAR" />
		<result column="SPEC" property="spec" jdbcType="VARCHAR" />
		<result column="ONLINE_TIME" property="onlineTime" jdbcType="TIMESTAMP" />
		<result column="SMALLPIC" property="smallpic" jdbcType="VARCHAR" />
		<result column="SHELFLIFE" property="shelfLife" jdbcType="INTEGER" />
		<result column="BIGPIC" property="bigPic" jdbcType="VARCHAR" />
		<result column="MEMO_CPJS" property="memoCpjs" jdbcType="VARCHAR" />
		<result column="MEMO_YYBK" property="memoYybk" jdbcType="VARCHAR" />
		<result column="MEMO_DPTJ" property="memoDptj" jdbcType="VARCHAR" />
		<result column="MEMO_CPRZ" property="memoCprz" jdbcType="VARCHAR" />
		<result column="MEMO_SCJD" property="memoScjd" jdbcType="VARCHAR" />
		<result column="MEMO_CPJG" property="memoCpjg" jdbcType="VARCHAR" />
		<result column="MEMO_CPPS" property="memoCpps" jdbcType="VARCHAR" />
	</resultMap>
	
   	<!-- 根据粉丝唯一标识获取电商平台用户信息 -->
	<select id="queryFansByOpenId" parameterType="String" resultMap="weixinFansMap">  
		select WEIXIN_FANS_ID, TB_WEIXIN_FANS.CUSTOMER_ID, TB_WEIXIN_FANS.CUSTOMER_TYPE, OPEN_ID, UNION_ID, LAST_SUBSCRIBE_TIME, LAST_UNSUBSCRIBE_TIME, IS_SUBSCRIBE, NICKNAME , GENDER, HEADERIMAGE, COUNTRY, PROVINCE, CITY, GROUP_ID, REMARK, TB_WEIXIN_FANS.CREATE_TIME, TB_WEIXIN_FANS.CREATE_USER from TB_WEIXIN_FANS
			inner join TB_CUSTOMER on TB_CUSTOMER.CUSTOMER_ID=TB_WEIXIN_FANS.CUSTOMER_ID
			where TB_WEIXIN_FANS.CUSTOMER_TYPE='3' and VIP_CUSTOMER_TYPE='3' and OPEN_ID=#{value}
	</select>
	
	<!-- 新增粉丝用户信息 -->
	<insert id="insertWeixinFans" parameterType="weixinFansBean">
    	insert into TB_WEIXIN_FANS (WEIXIN_FANS_ID, CUSTOMER_ID, CUSTOMER_TYPE, OPEN_ID, UNION_ID, LAST_SUBSCRIBE_TIME, LAST_UNSUBSCRIBE_TIME, IS_SUBSCRIBE, NICKNAME , GENDER, HEADERIMAGE, COUNTRY, PROVINCE, CITY, GROUP_ID, REMARK, CREATE_TIME, CREATE_USER)
    		values (#{weixinFansId}, #{customerId}, #{customerType}, #{openId}, #{unionId}, #{lastSubscribeTime,jdbcType=TIMESTAMP}, #{lastUnsubscribeTime,jdbcType=TIMESTAMP}, #{isSubscribe,jdbcType=BOOLEAN}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{headerimage,jdbcType=VARCHAR},  #{country,jdbcType=VARCHAR},  #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser})
    </insert>
	
	<!-- 产品查询条件 -->
	<sql id="product_where_clause" >
		and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.price is not null
	    <if test="searchKeywords != null and searchKeywords != '' " >
			<![CDATA[
				and (FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.serial like #{searchKeywords}
				or name like #{searchKeywords}
				or product_type like #{searchKeywords}
				or alias_name like #{searchKeywords})
			]]>
		</if>
		<if test="serial != null and serial !='' " >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.serial=#{serial}
			]]>
		</if>
		<if test="productType != null and productType !='' " >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.PRODUCT_TYPE=#{productType}
			]]>
		</if>
		<if test="brand != null and brand !='' " >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.brand=#{brand}
			]]>
		</if>
		<if test="productSaleType != null and productSaleType != '' " >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.PRODUCT_SALE_TYPE=#{productSaleType}
			]]>
		</if>
		<if test="priceStartRange != null" >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.price > #{priceStartRange}
			]]>
		</if>
		<if test="priceEndRange != null" >
			<![CDATA[
				and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.price <= #{priceEndRange}
			]]>
		</if>
	</sql>
	
	<!-- 查询菜场用户商品列表信息 -->
	<select id="queryMarketProduct" parameterType="productQueryBean" resultMap="productMap">  
        select top ${pageItems} FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.serial, name, price, product_sale_type, spec, smallpic from FUNC_MARKET_CUSTOMER_PRODUCT_PRICE('${priceDate}')
			where is_online=1
			and FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.serial not in (select top ${startItem} FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.serial from FUNC_MARKET_CUSTOMER_PRODUCT_PRICE('${priceDate}') 
			where is_online=1 <include refid="product_where_clause" /> order by FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.display_order)
				<include refid="product_where_clause" /> order by FUNC_MARKET_CUSTOMER_PRODUCT_PRICE.display_order
	</select>
	
	<!-- 查询菜场用户产品分类信息列表 -->
	<select id="queryMarketProductType" resultType="distionaryBean" parameterType="java.lang.String">
		select VC_PARENT_CODE as vcParentCode,
			VC_CODE as vcCode,
			VC_NAME as vcName, 
			VC_VALUE as vcValue, 
			DISPLAY_ORDER as displayOrder,
			MEMO as memo
				from TB_BASE_DICTIONARY where VC_CODE='PRODUCT_TYPE' and ONLINE='是' 
			and VC_NAME in (select distinct PRODUCT_TYPE from FUNC_MARKET_CUSTOMER_PRODUCT_PRICE('${value}') where is_online=1 and price is not null)
			order by DISPLAY_ORDER
    </select>
    
    <!-- 批量查询菜摊客户选择的产品信息 -->
    <select id="bathQueryMarketCustomerProduct" resultMap="productMap" parameterType="java.util.Map">
	    select serial, name, price, product_sale_type, spec, smallpic from FUNC_MARKET_CUSTOMER_PRODUCT_PRICE('${priceDate}')
				where is_online=1 and price is not null and 
		    <foreach collection="productList" item="item" index="index" open="(" separator="or" close=")"> 
		        (serial=#{item.productSerial} and spec=#{item.productSpec})
		    </foreach>
    </select>
    
    <!-- 删除还未支付的订单信息 -->
    <delete id="deleteNoPayOrderById" parameterType="java.lang.String">
    	delete from TB_ORDER where ORDER_ID=#{value} and ORDER_STATE='未支付'
    </delete>
    
    <!-- 删除订单详细信息 -->
    <delete id="deleteOrderDetailByOrderId" parameterType="java.lang.String">
    	delete from TB_ORDER_DETAIL where ORDER_ID=#{value}
    </delete>
    
    <!-- 删除订单详细信息 -->
    <delete id="deletePayTradeByOrderId" parameterType="java.lang.String">
    	delete from TB_PAY_TRADE where OUT_TRADE_NO=#{value}  and (PAY_STATUS=1 or PAY_STATUS=3)
    </delete>
    
    <insert id="insertWeixinRefundApply" parameterType="com.mobile.po.wx.WeixinRefundApplyBean">
    	insert into TB_WEIXIN_REFUND_APPLY(WEIXIN_REFUND_APPLY_ID, CUSTOMER_ID, ORDER_ID, REFUND_MONEY, CREATE_TIME, REFUND_REASON)
    		values (#{weixinRefundApplyId}, #{customerId}, #{orderId}, #{refundMoney}, #{createTime,jdbcType=TIMESTAMP}, #{refundReason})
    </insert>
</mapper>
